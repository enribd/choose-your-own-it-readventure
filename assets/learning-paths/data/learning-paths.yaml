- name: Microservices
  ref: microservices
  status: in-progress
  desc: |
    Distributed systems are not new but the way they are built nowadays is. Monolithic architectures need to evolve to leverage the cloud and the many advantages that microservices offer (scalability, fast releases, high-availability, resilience, and more). As usually happen in life, nothing is just benefits, and microservices architectures are not different, they bring many challenges with them like a more complicated management or debugging, economic costs and the necessary knowledge to build and run them. However, if this kind of architecture fit your needs or if you are interested in finding out what all the fuss about microservices is about don't hesitate and dive in!.
  summary: |
    Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.
  related:
    - system-design
    - kubernetes
    - apis
    - event-driven-architecture
  suggested:
    - serverless
    - golang
    - docker
    - observability
  tags: ["distributed-systems", "architecture", "scalability", "resilience", "observability", "kubernetes", "lambda", "faas"]
  logo:
    source: /assets/learning-paths/icons/microservices.png
- name: APIs
  ref: apis
  status: coming-soon
  desc: |
    TODO
  summary: |
    APIs are one way services use to talk to each other, there are a lot of aspects involved: communication protocols (REST, gRPC, WebSocket, GraphQL, etc), interface definition, version management, testing, security, rate limiting, api gateways, and more.
  related:
    - serverless
  suggested:
    - system-design
    - microservices
    - event-driven-architecture
  tags: ["grpc", "http", "graphql", "websocket", "api-gateway", "rate-limit", "quotas", "openapi", "contract-testing"]
- name: Event Driven Architecture (EDA)
  ref: event-driven-architecture
  status: coming-soon
  desc: |
    Coming soon
  summary: |
    Asynchronous communication between services is possible using events. There is a lot to learn here, the main challenge is changing the way you think about information distribution.
  suggested:
    - system-design
    - microservices
    - apis
    - serverless
- name: Serverless
  ref: serverless
  status: coming-soon
  desc: |
    Coming soon
  summary: |
    Also known as Function as a Service (FaaS). It's a cloud-native development model and a computing paradigm that allows you to define your applications as functions and events and run them without provisioning or managing servers.
  suggested:
    - system-design
    - microservices
    - apis
    - event-driven-architecture
- name: System Design
  ref: system-design
  status: stable
  desc: |
    You want to create systems that resolve complicated technical problems, to find optimal solutions, to learn how evolve your systems to the next level, to rack your brains designing wonderful architectures that withstand the overwhelming onslaught of hyped user hordes. Well, as AC/CD sing: It's a long way to the top if you wanna Rock' n' Roll. But do not yield, tough efforts often bring solid results, keep calm and read hard!
  summary: |
    TODO
  related:
    - microservices
    - apis
    - event-driven-architecture
    - serverless
  suggested:
    - software-architecture
  tags: ["scalability", "manageability", "resilience", "observability", "reliability", "mantainability", "extensibility", "high-availability", "databases", "algorithms"]
  logo:
    source: /assets/learning-paths/icons/system-design.png
- name: Software Architecture
  ref: software-architecture
  status: in-progress
  desc: |
    TODO
  summary: |
    TODO
  related:
    - microservices
    - apis
    - event-driven-architecture
    - serverless
  suggested:
    - system-design
  logo:
    source: /assets/learning-paths/icons/software-architecture.png
- name: Software Development
  ref: software-development
  status: coming-soon
  desc: |
    Coming soon
  summary: |
    Coming soon
  related:
    - golang
  suggested:
    - software-architecture
- name: Golang
  ref: golang
  status: stable
  desc: |
    This path starts with some books to grasp the basics of the language but building applications to make you apply knowledge to near real case scenarios. After that you will have to choose the following learning path depending on your needs or interests.
  summary: |
    TODO
  related:
    - TODO
  suggested:
    - cloud-native-apps
    - apis
    - serverless
    - software-architecture
  logo:
    source: https://skillicons.dev/icons?i=go
- name: Cloud Native Applications
  ref: cloud-native-apps
  status: coming-soon
  desc: |
    From now the focus will learning all the necessary concepts and techniques to produce scalable, resilient and observable applications, that are apt to run in environments like the cloud, container orchestrators or serverless environments.
  summary: |
    discover how to build applications destined to run in the cloud, Kubernetes or a serverless environment. You will learn how to make your applications scalable, resilient, observable and more.
  related:
    - golang
  suggested:
    - software-architecture
    - apis
    - serverless
- name: Domain Driven Design (DDD)
  ref: domain-driven-design
  status: coming-soon
  desc: |
    Coming soon
  summary: |
    Coming soon
  related:
    - software-architecture
  suggested:
    - golang
    - apis
    - serverless
- name: Docker
  ref: docker
  status: new
  desc: |
    Applications are not easy to develop, build and deploy, Docker containers help to ease that pain and also to deliver faster, more reliably and make apps amazingly portable. Linux containers are a technological revolution that transformed the industry forever, Docker was the catalyst, it drew near containers to developers and operators, nowadays is used world wide do develop and deploy applications in many ways. 
  summary: |
    What is a container? How is that useful? Why use it?, you will find all that and more if you follow this path. Discover what is behind the container revolution and start taking advantage of it!.
  related:
    - kubernetes
    - software-development
  suggested:
    - devops
  logo:
    source: https://user-images.githubusercontent.com/25181517/117207330-263ba280-adf4-11eb-9b97-0ac5b40bc3be.png
- name: Kubernetes
  ref: kubernetes
  status: stable
  desc: |
    After mastering building and running containers at small scale, orchestration is the next step in the road. Kubernetes is the most popular orchestrator, backed by the [CNCF](https://www.cncf.io/), a variety os small and big companies, and open source projects. Thanks its capabilities and the ecosystem of open source projects built around it, Kubernetes, is a very good option to run microservice platforms at scale.
  summary: |
    Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.
  related:
    - microservices
    - docker
  suggested:
    - devops
  tags: ["container-runtime", "ingress", "controller", "crd", "operator", "csi-driver", "admission-controller", "service-mesh", "platform-engineering"]
  logo:
    source: https://user-images.githubusercontent.com/25181517/182534006-037f08b5-8e7b-4e5f-96b6-5d2a5558fa85.png
- name: Management
  ref: management
  status: new
  desc: |
    TODO
  summary: |
    TODO
  related:
    - team-management
    - devops
  suggested:
    - TODO
- name: Team Management
  ref: team-management
  status: new
  desc: |
    With new development paradigms come new ways to compose and organize teams, the need of adapting relationships and inter-team communication is necessary to pursue efficiency and achieve organization goals faster.
  summary: |
    TODO
  related:
    - devops
    - management
  suggested:
    - TODO
  logo:
    source: /assets/learning-paths/icons/team-management.png
- name: DevOps
  ref: devops
  status: coming-soon
  desc: |
    Coming soon
  summary: |
    Coming soon
  related:
    - team-management
  suggested:
    - TODO
- name: SRE
  ref: sre
  status: new
  desc: |
    TODO
  summary: |
    TODO
  related:
    - devops
  suggested:
    - TODO
  tags: []
  logo:
    source: /assets/learning-paths/icons/sre.png
- name: IaC
  ref: iac
  status: new
  desc: |
    TODO
  summary: |
    TODO
  related:
    - devops
  suggested:
    - TODO
  logo:
    source: /assets/learning-paths/icons/iac.png
- name: Observability
  ref: observability
  status: new
  desc: |
    TODO
  summary: |
    TODO
  related:
    - sre
    - devops
    - microservices
  suggested:
    - TODO
  logo:
    source: /assets/learning-paths/icons/observability.png
- name: CI/CD
  ref: cicd
  status: coming-soon
  desc: |
    TODO
  summary: |
    TODO
  related:
    - sre
    - devops
    - microservices
  suggested:
    - TODO
  logo:
    source: https://user-images.githubusercontent.com/25181517/183868728-b2e11072-00a5-47e2-8a4e-4ebbb2b8c554.png
- name: Cloud
  ref: cloud
  status: coming-soon
  desc: |
    TODO
  summary: |
    TODO
  related:
    - system-design
    - microservices
  suggested:
    - TODO
