{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Choose your own IT readventure!","text":"<p>If you are a stubborn learner, eat books for breakfast, and want to discover new concepts or hunt new skills related to the IT world, I can assure you that you are in the right nook of the Internet. Prepare yourself to be amazed by a choose-your-own-adventure journey in the IT world. Hopefully, it will take you to interesting places thanks to the power and the fun of reading.</p> <p>Finally, make sure you don\u2019t forget about putting your newly acquired skills to the test, remember that practice makes the master!</p> <p>Starting your adventure is as easy as picking the set of skills that you want to learn or improve, check out the learning paths and choose your starting point. There are paths focused on a particular technology or skill, and more generic ones, but both are useful and can be combined depending of your goal.</p> <p>Warning!</p> <p>A minimum previous knowledge is required to start some of these adventures. Various of them have been assembled to enlarge or acquire expertise in topics considered, until certain point, advanced. If you are new to the IT world or if you want to follow a learning path of high difficulty my recommendation is that, before adventuring, you read first about the basics and foundational concepts of that particular topic.</p>"},{"location":"#start-your-adventure-choose-your-learning-path-wisely","title":"Start your adventure, choose your learning path wisely","text":"<ul> <li> <p>10 learning paths </p> <ul> <li>1 CI/CD : Automation is key to improve quality and shorten software releases. Read all about continuous integration and delivery principles, master the tools and learn the bases that will make you be more effective and efficient.</li> <li>3 Event Driven Architecture (EDA) : Asynchronous communication between services is possible using events. There is a lot to learn here, the main challenge is changing the way you think about communication patterns.</li> <li>4 Golang : A modern general purpose programming language born to make easier developing things like APIs, command line applications, cloud native applications, and concurrency patterns.</li> <li>1 Infrastructure as Code (IaC) : Automate the cloud infrastructure deployment with code, make it reusable, deliver faster, more secure and have a backup of all the work you did, as code.</li> <li>8 Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</li> <li>3 Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> <li>7 Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</li> <li>4 Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update cycles simpler and more frequent, to identify and resolve problems and, of course, automating things to make the life easier.</li> <li>6 System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</li> <li>2 Team Management : Building team is no easy feat, doing it to be efficient to deliver quality products and services blazinlig fast is really hard. Roll up your sleeves and discover what makes a good team.</li> </ul> </li> <li> <p>36 books  , discover them all in the  book index.</p> </li> <li>65 authors  , discover them all in the  author index.</li> </ul> <p>\u2b06 back to top</p>"},{"location":"badges/","title":"Badges","text":"<p>Badges indicates some aspects of the learning paths or books, like status, difficulty, rating, and more!</p>"},{"location":"badges/#learning-path-badges","title":"Learning path badges","text":"<p>These badges show the current status of the learning path:</p> Badge Level Coming soon! In construction Just released! Have fund and enjoy!"},{"location":"badges/#books-badges","title":"Books badges","text":"<p>All books have some badges associated to describe some aspect of them:</p> <ul> <li>You will read each book with the same amount of energy needed to fight these opponents, from lower to higher difficulty (these are totally subjective):</li> </ul> Badge Level Petty ant Naive chick Brave dog Fierce tiger Mighty dragon <ul> <li>Reading progress:</li> </ul> Badge Meaning Read To be read soon Not read and I don\u2019t know when I will <ul> <li>My book rating and recommendation level from lower to higher:</li> </ul> Badge Level Nice Good Very Good Excellent <p>Note: there are just four levels because all books mentioned are good reads, bad books don\u2019t belong here .</p> <ul> <li>Other badges:</li> </ul> Badge Meaning The book it\u2019s somewhat \u2018old\u2019 and I think it would be great to have a new edition to refresh the content Recommended read no matter the learning path"},{"location":"learning-paths/cicd/","title":"CI/CD Learning Path (1 )","text":"<p>It\u2019s all about automation. Accelerating release rate while increasing quality has been one of the main goals in the software industry for decades, now thanks to CI/CD tools like Github, Gitlab, Jenkins, Flux or ArgoCD organizations such as Netflix, Amazon or Google have reach that goal providing new software updates in a matter of hours or even minutes. Nowadays continuous integration and delivery principles are considered essential for any engineer worth its name, so now that you are here try to pick a nice book to improve your skills.</p> Order Cover Info Description 1 Learning GitHub Actions: Automation and Integration of CI/CD with GitHub Brent Laster Published in 2023 375 pages GitHub has turn into the most used platform around the world to share, build and even deploy code. Things like simplicity, great cli and web interfaces and a ever growing set of features make of GitHub a very nice tool to have in your belt. In this book the author focuses on Actions, the CI/CD framework of the platform. He starts explaining from the very basic concepts such as what are jobs or workflows, but you soon will be able to build your own automations. Also the security has its place in the book to let you know about risks and usual mistakes to help you avoid them. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</p> </li> <li> <p>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update cycles simpler and more frequent, to identify and resolve problems and, of course, automating things to make the life easier.</p> </li> </ul> learn about these related concepts!  <p>#automation #integration #delivery #quality #testing #fast-releases #lead-time</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/event-driven-architecture/","title":"Event Driven Architecture (EDA) Learning Path (3 )","text":"<p>Different from typical inter-service communication patterns like REST APIs or gRPC, event driven architectures allow to increase flexibility, agility, and speed in development processes by decoupling services. Synchronous calls are replaced by publishing events into a broker, from which the interested clients can receive the information. But there are many challenges when building this kind of architecture: re-adjusting the way teams think about communications, ensuring the information integrity and quality produced by the sources, stablishing secure and painless ways for consumers to integrate with the data sources, and more. Luckily the industry has evolved and experience in EDA is being documented in book and articles to let anyone learn good practices and how to overcome the many challenges ahead!.</p> Order Cover Info Description 1 Designing Microservices Platforms with NATS: A modern approach to designing and implementing scalable microservices platforms with NATS messaging Chanaka Fernando Published in 2021 356 pages NATS is a cloud native multi-purpose messaging system that allows implementing request-reply, queues and event streams communication patterns. Through the book the author guides the reader from the protocol concepts to building communications between services using some of the features that this technology offers. It\u2019s a good start if you want to get acquainted with event-driven architectures or if you are interested in NATS in particular. 1 Building Event-Driven Microservices: Building Event-Driven Microservices Adam Bellemare Published in 2020 321 pages Get to know the basic principles that guide event-driven architectures, the mechanisms and perils you will have to face when building a brand new architecture or integrating it with legacy systems. The author also offers his experience in the field exposing the different migration mechanisms and their trade-offs. Also you will read about tools needed in the process of creating a new architecture and hear about some of the specific technologies involved in the event streaming industry. 2 Building an Event-Driven Data Mesh: Patterns for Designing &amp; Building Event-Driven Architectures Adam Bellemare Published in 2023 275 pages The process of building an Event-driven architecture is no easy feat, the first step to doing it well is communicate with the stakeholders of the different bussiness domains involved, hear their needs, and identify the different communication patterns, entities and events in an event storming session. There are also crucials thing like ensuring the quality of the information served from the sources, the cataloging system of the information served, and stablishing an easy and secure way for interested clients to access those sources. All this and more is explained in detail in what could be seen as a complement of the Building Event-Driven Microservices book content. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</li> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li>Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</li> </ul> learn about these related concepts!  <p>#lously-coupled #flexibility #nats #kafka #pulsar #json-schema #avro #event-storming #event-sourcing #schema-registry</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/golang/","title":"Golang Learning Path (4 )","text":"<p>This path starts with some books to grasp the basics of the language but building applications to make you apply knowledge to near real case scenarios. After that you will have to choose the following steps depending on your needs or interests.</p> Order Cover Info Description 1 Learning Go Jon Bodner Published in 2021 375 pages Golang from the ground up, learn the basics and all the language tools at your disposal to create applications in a modern programming language. 2 Let\u2019s Go: Let\u2019s Go Alex Edwards Published in 2019 305 pages Once you are familiarized with the foundations of the language, this book will help you to wire things up and learn how to use the tools Go offers to build a real application. You will follow the author while he builds a snippets mangament webapp, along the way you will use the Go to create a web with html templates, to process html requests, to store content in a database, manage user sessions, some security practices, and more. I found this one of the best books about Golang out there, don\u2019t let it pass and grab it!. 3 Let\u2019s Go Further!: Let\u2019s Go Further! Alex Edwards Published in 2021 582 pages Following Let\u2019s Go comes this book, where the author teachs you how to build an API and some common techniques to manage thinks like encoding/decoding JSON messages, rate limiting, CORS, pagination techniques, user data management, etc. Definitely a wothy read if you want to increase your knowledge in Go and how modern applications are built. 4 Cloud Native Go: Cloud Native Go Matthew A. Titmus Published in 2021 433 pages In this book you will discover what properties an application should have to be considered cloud native by reviewing and extending in detail the classic 12 factors. It will show you some useful patterns used to achieve things like: scalability, resilience, observability, and more. Along the way the author drops some insightful best practice pills about essential things like logging, caching, configuration management, etc. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>CI/CD : Automation is key to improve quality and shorten software releases. Read all about continuous integration and delivery principles, master the tools and learn the bases that will make you be more effective and efficient.</p> </li> <li> <p>Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</p> </li> <li> <p>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</p> </li> </ul> learn about these related concepts!  <p>#goroutines #concurrency #channels #context #waitgroup #command-line</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/iac/","title":"Infrastructure as Code (IaC) Learning Path (1 )","text":"<p>IaC is an evolutionary pattern born in the early stages of the cloud era. It allows to declare the infrastructure in code and automate the deployment and configuration of huge amount of servers and services, which reduces time to market and allows bussineses to compete in a fast moving world. Another key characteristic is reproducibility, which means you can reuse your code to deploy similar resources easily. Nowadays every company have seen the advantages of IaC and uses code to manage their cloud infrastructures.</p> Order Cover Info Description 1 Terraform Up &amp; Running: Terraform Up &amp; Running Yevgenly Brikman Published in 2022 457 pages Terraform is the leading product in the IaC section, used widely for its simplicity, declarative nature, extensibility and compatibility con almost every cloud provider. Many companies in the industry use it to declare infrastructure as code and operate with Terraform every day. It is considered an essential tool in the cloud engineer or DevOps toolbelt. Terraform Up and Running will help you to understand and apply the IaC principles, to organize your code to follow the best practices, and also how testing is performed in this paradigm. <p>The following paths are opened to you now, choose wisely:</p> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li>CI/CD : Automation is key to improve quality and shorten software releases. Read all about continuous integration and delivery principles, master the tools and learn the bases that will make you be more effective and efficient.</li> </ul> learn about these related concepts!  <p>#cloud-engineering #automation #state-management #fault-recovery #terraform #pulumi #crossplane #ansible</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/kubernetes/","title":"Kubernetes Learning Path (8 )","text":"<p>After mastering building and running containers at small scale, orchestration is the next step in the road. Kubernetes is the most popular orchestrator, backed by the CNCF, a variety os small and big companies, and open source projects. Thanks to its capabilities and the ecosystem of open source projects built around it, Kubernetes, is a the industry facto standard for running microservice platforms at scale.</p> Order Cover Info Description 1 Kubernetes: Up &amp; Running Brendan Burns, Joe Beda, Kelsey Hightower Published in 2022 326 pages Start your Kubernetes journey from the very basics. Learn the building blocks to get a solid knowledge base that will allow you advance in the fascinating world of container orchestration and microservice platforms. Recommended to every developer, software architect, infrastructure engineer or platform engineer due to the Kubernetes relevance nowadays. 2 Kubernetes Patterns: Reusable Elements for Designing Cloud Native Applications Bilgin Ibryam, Roland Huss Published in 2023 (2nd edition) 300 pages After a few years of using Kubernetes teams started to detect recognizable patterns that are commonly replicated. From the famous sidecar pattern and init containers to the necessary configuration patterns and beyond. This book will teach you how to solve common challenges in cloud native environments. 2 Kubernetes Best Practices: Kubernetes Best Practices Brendan Burns, Eddie Villalba, Dave Strebel, Lachlan Evenson Published in 2019 268 pages Usually, after being familiar with the basics of any technology, learning the best practices is a nice step, it will help you to avoid common mistakes and open new ways of thinking and doing things. This book will do exaclty that, from basic to more advanced topics. 3 Production Kubernetes: Production Kubernetes Josh Rosso, Rich Lander, Alex Brand, John Harris Published in 2021 506 pages Production Kubernetes will guide you from the view of an amateur to the vision of all you need to know and implement in order to build a professional and productive microservice platform. It also demonstrates the Kubernetes API extensibility through drivers for networking, storage and more. Other interesting topis are admission controllers, operators, service meshes and security. Definitely this is a book I really enjoyed, I recommend to read it at the same time with Design Patterns for Cloud Native Applications, it will broaden your vision as a developer as well as your perspective as platform engineer. 4 Certified Kubernetes Application Developer (CKAD) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2021 188 pages If you are interested in getting certified as Kubernetes application developer this book offers you a guide to do just that. 4 Certified Kubernetes Administrator (CKA) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2022 201 pages If you are interested in getting certified as Kubernetes administrator this book offers you a guide to do just that. 5 Knative in Action Jacques Chester Published in 2021 272 pages Knative is, along OpenFaaS, one of the most popular ways to build a serverless platform over Kubernetes. The author starts from zero explaining the motivation to adopt a serverless paradigm, then presents Knative in a technical demonstration of all its basic and some of the more advanced features like traffic management and application delivery. There are not many books on the topic yet as Knative is still a relatively young project. 5 Kubernetes Operators: Automating the Container Orchestration Platform Jason Dobies, Joshua Wood Published in 2020 154 pages Operators are another way of leveraging Kubernetes itself, they offer you the possibility to customize and automate your workloads management. Its a very popular pattern, in this book you will find what you need to get started to develop your own operator and all the tooling around the process. This book is a little bit \u2018old\u2019, many things have changed in this topic since 2020, it needs a second edition to adapt its contents to more updated practices. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</p> </li> <li> <p>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update cycles simpler and more frequent, to identify and resolve problems and, of course, automating things to make the life easier.</p> </li> </ul> learn about these related concepts!  <p>#container-runtime #ingress #controller #crd #operator #csi-driver #admission-controller #service-mesh #platform-engineering</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/microservices/","title":"Microservices Learning Path (3 )","text":"<p>Distributed systems are not new but the way they are built nowadays is. Monolithic architectures need to evolve to leverage the cloud and the many advantages that microservices offer (scalability, fast releases, high-availability, resilience, and more). As usually happen in life, nothing is just benefits, and microservices architectures are not different, they bring many challenges with them like a more complicated management or debugging, economic costs and the necessary knowledge to build and run them. However, if this kind of architecture fit your needs or if you are interested in finding out what all the fuss about microservices is about don\u2019t hesitate and dive in!.</p> Order Cover Info Description 1 Building Microservices: Designing Fine-Grained Systems Sam Newman Published in 2022 616 pages One of the most important books in the field. Far from advocating for the monolithic architectures exile, the book offers useful insights to help you identify use cases for monoliths, or when to turn to microservices. It will teach you what microservices really are, their evolutionary origin, principles, characteristics and all the new challenges they bring to the table. Finally, the author explains how organizations should evolve to adapt their internal structure and vision in order to efficiently deliver value using microservices architectures. 2 Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith Sam Newman Published in 2019 270 pages Intended as a companion of Building Microservices, this book focus in the things to take in mind to adopt a microservice architecture parting form a monolith. For those considering taking the leap, Sam Newman, offers the vision of where to start, how to split the monolith beast and what to do along the way to avoid being crushed by the microservice chaos. Definitely a nice guide to avoid stumbling over well know problems and apply best practices and patterns from the start of a difficult journey. 3 Microservices Patterns: Microservices Patterns Chris Richardson Published in 2018 520 pages One of the bibles of the microservice architectures, it teaches design, service communication patterns, testing, state management, deployment patterns, and more. Basically a \u201cfrom zero to hero\u201d approach that will make you an expert if you read it carefully. Despite the fact that the book has some years, the content is still valid today, would be nice to have an update though. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</li> <li>Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</li> <li>Event Driven Architecture (EDA) : Asynchronous communication between services is possible using events. There is a lot to learn here, the main challenge is changing the way you think about communication patterns.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li>Golang : A modern general purpose programming language born to make easier developing things like APIs, command line applications, cloud native applications, and concurrency patterns.</li> </ul> learn about these related concepts!  <p>#distributed-systems #architecture #scalability #resilience #observability #kubernetes #lambda #faas</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/software-architecture/","title":"Software Architecture Learning Path (7 )","text":"<p>To build effective services and applications a set of rules have to define what are the goals of the system, what it can or cannot do, and how things are structured to accomplish all that. Software needs to be designed and structured to achieve reasonable maintainability, aceptable performance and good extensibility. Explore beyond the code and discover how systems work, how they were designed to scale and adapt in this huge and ever changing world.</p> Order Cover Info Description 1 Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages Despite of being oriented mainly to developers, this book could help you to understand how cloud native applications are built and the way they interact. Some predominating patterns for communication, composition, data and api management or scalability are explained in these pages, it could be really useful to know them if you are developing or designing systems based on the cloud. 2 Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages A fair amount of information about distributed systems and scalability is contained in this book: databases, event processing, caching, asynchronous messaging\u2026 When designing systems it\u2019s necessary to think about how incresing load will affect aspects like performance and reliability, that\u2019s the reason why scalability is a big subject and one of the most important properties of a system since the cloud flourished and extended. 2 Fundamentals of Software Architecture: An Engineering Approach Mark Richards, Neal Ford Published in 2020 419 pages Beyond code there is an amazing set of things to learn in the software world: new concepts, patterns, architectures and ways of doing things to design and build systems in a modern era where adaptability, reliability and scalability are essential for bussiness success. Adding to all that you will learn skills like risk assesment, decision making based on trade-offs, or how to manage and assemble teams. 3 Software Architecture: The Hard Parts Neal Ford, Mark Richards, Pramod Sadalage, Zhamak Dehghani Published in 2021 459 pages Keep diving in the software architecture topic with this book. Some of the advanced topics treated are: decompossition patterns, service granularity, data management or distributed transactions. When facing problems at scale that knowledge is not only useful but necessary to success in the process of designing systems or adapting existing ones to new requirements. 3 Learning Domain-Driven Design: Aligning Software Architecture and Business Strategy Vladik Khononov Published in 2021 340 pages Learn to apply bussiness concepts to model software, decouple components and set boundaries to define responsibilities and stable interfaces. With Domain-Driven Design techniques software get closer to bussiness while improving the whole structure not only of projects but also the organizations that adopt this architecture. 3 Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design Robert C. Martin Published in 2017 432 pages One of the most famous architectures in software is the Clean Architecture, applicable to different programming paradigms and clearly defined with design principles. Learn how to wield it in your projects to provide them with the necessary properties to create extensible, flexible, manageable and scalable software. 4 Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems Martin Kleppmann Published in 2017 616 pages Learn the fundamental properties of data driven applications and how to treat data in terms of storage, replication, indexing, querying, processing and consistency. A new edition of this jewel is in order because the publication was some years ago, but don\u2019t be fooled, the content is still valid so go ahead and dive in. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>CI/CD : Automation is key to improve quality and shorten software releases. Read all about continuous integration and delivery principles, master the tools and learn the bases that will make you be more effective and efficient.</li> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> <li>Event Driven Architecture (EDA) : Asynchronous communication between services is possible using events. There is a lot to learn here, the main challenge is changing the way you think about communication patterns.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</p> </li> <li> <p>Golang : A modern general purpose programming language born to make easier developing things like APIs, command line applications, cloud native applications, and concurrency patterns.</p> </li> </ul> learn about these related concepts!  <p>#extensibility #scalability #clean-code #domain-driven-design #heaxagonal-architecture</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/sre/","title":"Site Reliability Engineering (SRE) Learning Path (4 )","text":"<p>Risk management, SLAs, SLIs, SLOs, error budget, toil, outage post mortems are just a few concepts involved in an SRE engineer\u2019s daily life. The focus of this path is to acquire the necessary skills to keep systems alive and optimize their performance. To do that you need automation, observable systems, monitoring, service lifecycle management skills, and more. Major companies in the field apply interesting techniques to debug, fix and prevent outages in hundreds of services consumed by millons of users simoultaneously, learn how they achieve such performances!</p> Order Cover Info Description 1 Site Reliability Engineering: How Google Runs Production Systems Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Myrphy Published in 2017 552 pages Born in the core of Google, Site Reliability Engineering, has spread as a set of practices to run production systems, automate them and what to do when they fail. In this book the authors tell how those practices came to be, and how the comany had to invent a new way to manage hundreds of services at the same time while keeping the pace of feature releases in a buzzing market. Automation, team organization, and developing new systems to make possible managing services at scale are some of the things you will find in this book. 2 The Site Reliability Workbook: Practical Ways to Implement SRE Betsy Beyer, Niall Myrphy, David K. Rensin, Kent Kawahara, Stephen Thorne Published in 2018 512 pages Site Reliability Engineering is being adopted the last few years by many organizations to improve the operational aspects of running production services. This book intends to be a guide to help such organizations and its engineers to understand and integrate the different practices in their workflow. 3 Observability Engineering: Achieving Production Excellence Engineering Charity Majors, Liz Fong-Jones, George Miranda Published in 2022 318 pages Every running system is bound to suffer an outage sooner or later, once you are in the critical zone you need to asses the state your system is in as quick as you can to repair it and minimize the down time. The authors show deep knowledge about how to make a system obserbable by exposing metrics and traces, the way you need to store them, and of course how to exploit them to reflect the system state every moment. Aside of outages, observability is also useful to leverage insights of the services regarding the manner you may want to improve them or adapt to new coming necessities. 3 Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems Heather Adkins, Betsy Beyer, Paul Blankship, Piotr Lewandowski, Ana Opera, Adam Stubblefield Published in 2020 555 pages Once familiar with SRE basics and principles this book will teach you how to build systems aiming for reliability and security. Inside you will find the priciples to apply, the best practices to follow, and the patterns to implement when designing systems to make them stable, scalable, reliable and secure. <p>The following paths are opened to you now, choose wisely:</p> learn about these related concepts!  <p>#risk-management #sla #sli #slo #error-budget #toil #post-mortems #cascading-failures</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/system-design/","title":"System Design Learning Path (6 )","text":"<p>You want to create systems that resolve complicated technical problems, to find optimal solutions, to learn how evolve your systems to the next level, to rack your brains designing wonderful architectures that withstand the overwhelming onslaught of hyped user hordes. Well, as AC/CD sing: It\u2019s a long way to the top if you wanna Rock\u2019 n\u2019 Roll. But do not yield, tough efforts often bring solid results, keep calm and read hard!</p> Order Cover Info Description 1 System Design Interview: An insider\u2019s guide Alex Xu Published in 2020 309 pages Even though the author focus in system design interview this book is also very useful if you are interested in learning how to build systems from the ground up. Each chapter is a different interview that illustrates a different use case where technical decisions are made, balancing trade-offs to come up with an acceptable solution. The variety of problems resolved is great and the content is expanded by a list of books and articles referenced at the end of each chapter. 1 Designing Distributed Systems: Patterns and Paradigms for Scalable, Reliable Services Brendan Burns Published in 2018 162 pages Designing distributed systems is not easy, after years of experience patterns emerged and this book bring some of those patterns together to convey ways to split, replicate, communicate and reuse components. Work queues, batch processing, adapters, ambassadors, event-driven processing or deployment patterns are some of the topics covered along with hands on examples for illustration. 1 Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages Despite of being oriented mainly to developers, this book could help you to understand how cloud native applications are built and the way they interact. Some predominating patterns for communication, composition, data and api management or scalability are explained in these pages, it could be really useful to know them if you are developing or designing systems based on the cloud. 2 System Design Interview volume 2: An insider\u2019s guide Alex Xu Published in 2022 424 pages An extension of the first part, the structure follow the same pattern but adding new cases. The author is well versed in many topics, from networking and databases to software development and algorithms, and it shows along the pages. Learn to design location based services, stock exchanges, game leaderborads and more. If you like the first one you will like this. 2 Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages A fair amount of information about distributed systems and scalability is contained in this book: databases, event processing, caching, asynchronous messaging\u2026 When designing systems it\u2019s necessary to think about how incresing load will affect aspects like performance and reliability, that\u2019s the reason why scalability is a big subject and one of the most important properties of a system since the cloud flourished and extended. 4 Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems Martin Kleppmann Published in 2017 616 pages Learn the fundamental properties of data driven applications and how to treat data in terms of storage, replication, indexing, querying, processing and consistency. A new edition of this jewel is in order because the publication was some years ago, but don\u2019t be fooled, the content is still valid so go ahead and dive in. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> <li>Event Driven Architecture (EDA) : Asynchronous communication between services is possible using events. There is a lot to learn here, the main challenge is changing the way you think about communication patterns.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</p> </li> <li> <p>Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</p> </li> </ul> learn about these related concepts!  <p>#scalability #manageability #resilience #observability #reliability #mantainability #extensibility #high-availability #databases #algorithms</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/team-management/","title":"Team Management Learning Path (2 )","text":"<p>With new development paradigms come new ways to compose and organize teams, the need of adapting relationships and inter-team communication is necessary to pursue efficiency and achieve organization goals faster. That\u2019s what you will learn in this path, how to make teams and organizations more effective and efficient.</p> Order Cover Info Description 1 Team Topologies: Team Topologies Matthew Skelton, Manuel Pais Published in 2019 240 pages Team Topologies offers a modern vision about how teams should be created and managed to optimize a company\u2019s internal functioning as well as the output it produces. It uses ideas from other management books, like Accelerate (Nicole Forsgren), and takes them a step further to create a framework that will teach you form, combine and coordinate teams. The authors present four different kinds of teams, the role they play for a business domain and how they should communicate between them to achieve the organization goals as efficiently as possible. Also, you will discover things to avoid when managing teams, and what affect negatively to their performance. 2 Accelerate: Building and Scaling High Performing Technology Organizations Nicole Forsgren Published in 2018 288 pages This books is born from a task of data collected by the authors during their career participating in software projets. The experience was converted to book format with added conclusions and it has been a reference since the publication. Common problems of communication and team misfunction are exposed as well as some remedies to avoid them when building teams or organizations. <p>The following paths are opened to you now, choose wisely:</p> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update cycles simpler and more frequent, to identify and resolve problems and, of course, automating things to make the life easier.</li> </ul> learn about these related concepts!  <p>#efficiency #software-delivery #team-design #organization-structure</p> <p>\u2b06 back to top</p>"},{"location":"more/about/","title":"About me","text":"<p>I am a professional Cloud and Platform Engineer, DevOps practitioner, and Architect in construction. Also I develop things in my free time just for the fun of learning how not to do things. My main interests are the cloud, microservice architectures, EDA, serverless, system design, Kubernetes, and Golang.</p> <p>This repo is conceived as a journal of my personal journey and a learning path to guide others who, like me, find in reading the best way to acquire deep knowledge in certain topics. I will put together a list that categorizes all the books I\u2019ve read as well as those that I intend to read, or those that I consider of some importance in the IT field. The list is subjective, it will reflect my interests or the way I\u2019ve decided to explore topics (most likely in a chaotic way).</p> <p>If you think some books may fit better in other categories, or the category names are not accurate enough or have suggestions about possible improvements just let me know and I will gladly consider your comments. </p> <p>Of course, there will be books broadly considered a must-read that I have not listed, that\u2019s either because they don\u2019t fit in my career or simply because I don\u2019t know of their existence, in any case let me know!</p> <p>Thanks for stopping by, enjoy! </p>"},{"location":"more/books-read/","title":"Books Read (21 )","text":"Cover Info Learning Paths \u0323 Accelerate: Building and Scaling High Performing Technology Organizations Nicole Forsgren Published in 2018 288 pages <ul><li>Team Management</li></ul> \u0323 Building Event-Driven Microservices: Building Event-Driven Microservices Adam Bellemare Published in 2020 321 pages <ul><li>Event Driven Architecture (EDA)</li></ul> \u0323 Building Microservices: Designing Fine-Grained Systems Sam Newman Published in 2022 616 pages <ul><li>Microservices</li></ul> \u0323 Building an Event-Driven Data Mesh: Patterns for Designing &amp; Building Event-Driven Architectures Adam Bellemare Published in 2023 275 pages <ul><li>Event Driven Architecture (EDA)</li></ul> \u0323 Cloud Native Go: Cloud Native Go Matthew A. Titmus Published in 2021 433 pages <ul><li>Golang</li></ul> \u0323 Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages <ul><li>Software Architecture</li><li>System Design</li></ul> \u0323 Designing Microservices Platforms with NATS: A modern approach to designing and implementing scalable microservices platforms with NATS messaging Chanaka Fernando Published in 2021 356 pages <ul><li>Event Driven Architecture (EDA)</li></ul> \u0323 Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages <ul><li>System Design</li><li>Software Architecture</li></ul> \u0323 Knative in Action Jacques Chester Published in 2021 272 pages <ul><li>Kubernetes</li></ul> \u0323 Kubernetes: Up &amp; Running Brendan Burns, Joe Beda, Kelsey Hightower Published in 2022 326 pages <ul><li>Kubernetes</li></ul> \u0323 Kubernetes Patterns: Reusable Elements for Designing Cloud Native Applications Bilgin Ibryam, Roland Huss Published in 2023 (2nd edition) 300 pages <ul><li>Kubernetes</li></ul> \u0323 Learning GitHub Actions: Automation and Integration of CI/CD with GitHub Brent Laster Published in 2023 375 pages <ul><li>CI/CD</li></ul> \u0323 Let\u2019s Go: Let\u2019s Go Alex Edwards Published in 2019 305 pages <ul><li>Golang</li></ul> \u0323 Let\u2019s Go Further!: Let\u2019s Go Further! Alex Edwards Published in 2021 582 pages <ul><li>Golang</li></ul> \u0323 Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith Sam Newman Published in 2019 270 pages <ul><li>Microservices</li></ul> \u0323 Production Kubernetes: Production Kubernetes Josh Rosso, Rich Lander, Alex Brand, John Harris Published in 2021 506 pages <ul><li>Kubernetes</li></ul> \u0323 Site Reliability Engineering: How Google Runs Production Systems Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Myrphy Published in 2017 552 pages <ul><li>Site Reliability Engineering (SRE)</li></ul> \u0323 System Design Interview: An insider\u2019s guide Alex Xu Published in 2020 309 pages <ul><li>System Design</li></ul> \u0323 System Design Interview volume 2: An insider\u2019s guide Alex Xu Published in 2022 424 pages <ul><li>System Design</li></ul> \u0323 Team Topologies: Team Topologies Matthew Skelton, Manuel Pais Published in 2019 240 pages <ul><li>Team Management</li></ul> <p>\u2b06 back to top</p>"},{"location":"more/mentions/","title":"Worthy metions","text":"<ul> <li> <p>Icons:</p> <ul> <li>Skill icons</li> <li>Tech icons</li> <li>Emoji icons</li> </ul> </li> </ul>"},{"location":"references/author-index/","title":"Author Index (65 )","text":"Author Books   Adam Bellemare Building Event-Driven Microservices: Building Event-Driven Microservices Building an Event-Driven Data Mesh: Patterns for Designing &amp; Building Event-Driven Architectures   Adam Stubblefield Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems   Alex Brand Production Kubernetes: Production Kubernetes   Alex Edwards Let\u2019s Go Further!: Let\u2019s Go Further! Let\u2019s Go: Let\u2019s Go   Alex Xu System Design Interview volume 2: An insider\u2019s guide System Design Interview: An insider\u2019s guide   Ana Opera Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems   Benjamin Muschko Certified Kubernetes Administrator (CKA) Study Guide: In Depth Guidance and Practice Certified Kubernetes Application Developer (CKAD) Study Guide: In Depth Guidance and Practice   Betsy Beyer Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems Site Reliability Engineering: How Google Runs Production Systems The Site Reliability Workbook: Practical Ways to Implement SRE   Bilgin Ibryam Kubernetes Patterns: Reusable Elements for Designing Cloud Native Applications   Brendan Burns Designing Distributed Systems: Patterns and Paradigms for Scalable, Reliable Services Kubernetes Best Practices: Kubernetes Best Practices Kubernetes: Up &amp; Running   Brent Laster Learning GitHub Actions: Automation and Integration of CI/CD with GitHub   Chanaka Fernando Designing Microservices Platforms with NATS: A modern approach to designing and implementing scalable microservices platforms with NATS messaging   Charity Majors Observability Engineering: Achieving Production Excellence Engineering   Chris Jones Site Reliability Engineering: How Google Runs Production Systems   Chris Richardson Microservices Patterns: Microservices Patterns   Daniel Bryant Mastering API Architecture: Defining, Connecting, and Securing Distributed Systems and Microservices   Dave Strebel Kubernetes Best Practices: Kubernetes Best Practices   David Farley Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation   David K. Rensin The Site Reliability Workbook: Practical Ways to Implement SRE   Eddie Villalba Kubernetes Best Practices: Kubernetes Best Practices   Gene Kim The DevOPS Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations The Phoenix Project: The Phoenix Project The Unicorn Project: The Unicorn Project   George Miranda Observability Engineering: Achieving Production Excellence Engineering   George Spafford The Phoenix Project: The Phoenix Project   Heather Adkins Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems   Ian Gorton Foundations of Scalable Systems: Designing Distributed Architectures   Jacques Chester *Knative in Action: *   James Gough Mastering API Architecture: Defining, Connecting, and Securing Distributed Systems and Microservices   Jason Dobies Kubernetes Operators: Automating the Container Orchestration Platform   Jennifer Petoff Site Reliability Engineering: How Google Runs Production Systems   Jez Humble The DevOPS Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations   Joe Beda Kubernetes: Up &amp; Running   John Harris Production Kubernetes: Production Kubernetes   Jon Bodner *Learning Go: *   Josh Rosso Production Kubernetes: Production Kubernetes   Joshua Wood Kubernetes Operators: Automating the Container Orchestration Platform   Kasun Indrasiri Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams   Kelsey Hightower Kubernetes: Up &amp; Running   Kent Kawahara The Site Reliability Workbook: Practical Ways to Implement SRE   Kevin Behr The Phoenix Project: The Phoenix Project   Lachlan Evenson Kubernetes Best Practices: Kubernetes Best Practices   Liz Fong-Jones Observability Engineering: Achieving Production Excellence Engineering   Manuel Pais Team Topologies: Team Topologies   Mark Richards Fundamentals of Software Architecture: An Engineering Approach Software Architecture: The Hard Parts   Martin Kleppmann Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems   Martin Robert Clean Code: A Handbook of Agile Software Craftsmanship   Matthew A. Titmus Cloud Native Go: Cloud Native Go   Matthew Auburn Mastering API Architecture: Defining, Connecting, and Securing Distributed Systems and Microservices   Matthew Skelton Team Topologies: Team Topologies   Neal Ford Fundamentals of Software Architecture: An Engineering Approach Software Architecture: The Hard Parts   Niall Myrphy Site Reliability Engineering: How Google Runs Production Systems The Site Reliability Workbook: Practical Ways to Implement SRE   Nicole Forsgren Accelerate: Building and Scaling High Performing Technology Organizations   Patrick Debols The DevOPS Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations   Paul Blankship Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems   Piotr Lewandowski Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems   Prabath Siriwardena Advanced API Security: OAuth 2.0 and Beyond   Pramod Sadalage Software Architecture: The Hard Parts   Rich Lander Production Kubernetes: Production Kubernetes   Robert C. Martin Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design   Roland Huss Kubernetes Patterns: Reusable Elements for Designing Cloud Native Applications   Sam Newman Building Microservices: Designing Fine-Grained Systems Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith   Sriskandarajah Suhothayan Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams   Stephen Thorne The Site Reliability Workbook: Practical Ways to Implement SRE   Vladik Khononov Learning Domain-Driven Design: Aligning Software Architecture and Business Strategy   Yevgenly Brikman Terraform Up &amp; Running: Terraform Up &amp; Running   Zhamak Dehghani Software Architecture: The Hard Parts <p>\u2b06 back to top</p>"},{"location":"references/book-index/","title":"Book Index (36 )","text":"Cover Info Learning Paths \u0323 Accelerate: Building and Scaling High Performing Technology Organizations Nicole Forsgren Published in 2018 288 pages <ul><li>Team Management</li></ul> \u0323 Building Event-Driven Microservices: Building Event-Driven Microservices Adam Bellemare Published in 2020 321 pages <ul><li>Event Driven Architecture (EDA)</li></ul> \u0323 Building Microservices: Designing Fine-Grained Systems Sam Newman Published in 2022 616 pages <ul><li>Microservices</li></ul> \u0323 Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems Heather Adkins, Betsy Beyer, Paul Blankship, Piotr Lewandowski, Ana Opera, Adam Stubblefield Published in 2020 555 pages <ul><li>Site Reliability Engineering (SRE)</li></ul> \u0323 Building an Event-Driven Data Mesh: Patterns for Designing &amp; Building Event-Driven Architectures Adam Bellemare Published in 2023 275 pages <ul><li>Event Driven Architecture (EDA)</li></ul> \u0323 Certified Kubernetes Administrator (CKA) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2022 201 pages <ul><li>Kubernetes</li></ul> \u0323 Certified Kubernetes Application Developer (CKAD) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2021 188 pages <ul><li>Kubernetes</li></ul> \u0323 Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design Robert C. Martin Published in 2017 432 pages <ul><li>Software Architecture</li></ul> \u0323 Cloud Native Go: Cloud Native Go Matthew A. Titmus Published in 2021 433 pages <ul><li>Golang</li></ul> \u0323 Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages <ul><li>Software Architecture</li><li>System Design</li></ul> \u0323 Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems Martin Kleppmann Published in 2017 616 pages <ul><li>Software Architecture</li><li>System Design</li></ul> \u0323 Designing Distributed Systems: Patterns and Paradigms for Scalable, Reliable Services Brendan Burns Published in 2018 162 pages <ul><li>System Design</li></ul> \u0323 Designing Microservices Platforms with NATS: A modern approach to designing and implementing scalable microservices platforms with NATS messaging Chanaka Fernando Published in 2021 356 pages <ul><li>Event Driven Architecture (EDA)</li></ul> \u0323 Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages <ul><li>System Design</li><li>Software Architecture</li></ul> \u0323 Fundamentals of Software Architecture: An Engineering Approach Mark Richards, Neal Ford Published in 2020 419 pages <ul><li>Software Architecture</li></ul> \u0323 Knative in Action Jacques Chester Published in 2021 272 pages <ul><li>Kubernetes</li></ul> \u0323 Kubernetes: Up &amp; Running Brendan Burns, Joe Beda, Kelsey Hightower Published in 2022 326 pages <ul><li>Kubernetes</li></ul> \u0323 Kubernetes Best Practices: Kubernetes Best Practices Brendan Burns, Eddie Villalba, Dave Strebel, Lachlan Evenson Published in 2019 268 pages <ul><li>Kubernetes</li></ul> \u0323 Kubernetes Operators: Automating the Container Orchestration Platform Jason Dobies, Joshua Wood Published in 2020 154 pages <ul><li>Kubernetes</li></ul> \u0323 Kubernetes Patterns: Reusable Elements for Designing Cloud Native Applications Bilgin Ibryam, Roland Huss Published in 2023 (2nd edition) 300 pages <ul><li>Kubernetes</li></ul> \u0323 Learning Domain-Driven Design: Aligning Software Architecture and Business Strategy Vladik Khononov Published in 2021 340 pages <ul><li>Software Architecture</li></ul> \u0323 Learning GitHub Actions: Automation and Integration of CI/CD with GitHub Brent Laster Published in 2023 375 pages <ul><li>CI/CD</li></ul> \u0323 Learning Go Jon Bodner Published in 2021 375 pages <ul><li>Golang</li></ul> \u0323 Let\u2019s Go: Let\u2019s Go Alex Edwards Published in 2019 305 pages <ul><li>Golang</li></ul> \u0323 Let\u2019s Go Further!: Let\u2019s Go Further! Alex Edwards Published in 2021 582 pages <ul><li>Golang</li></ul> \u0323 Microservices Patterns: Microservices Patterns Chris Richardson Published in 2018 520 pages <ul><li>Microservices</li></ul> \u0323 Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith Sam Newman Published in 2019 270 pages <ul><li>Microservices</li></ul> \u0323 Observability Engineering: Achieving Production Excellence Engineering Charity Majors, Liz Fong-Jones, George Miranda Published in 2022 318 pages <ul><li>Site Reliability Engineering (SRE)</li></ul> \u0323 Production Kubernetes: Production Kubernetes Josh Rosso, Rich Lander, Alex Brand, John Harris Published in 2021 506 pages <ul><li>Kubernetes</li></ul> \u0323 Site Reliability Engineering: How Google Runs Production Systems Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Myrphy Published in 2017 552 pages <ul><li>Site Reliability Engineering (SRE)</li></ul> \u0323 Software Architecture: The Hard Parts Neal Ford, Mark Richards, Pramod Sadalage, Zhamak Dehghani Published in 2021 459 pages <ul><li>Software Architecture</li></ul> \u0323 System Design Interview: An insider\u2019s guide Alex Xu Published in 2020 309 pages <ul><li>System Design</li></ul> \u0323 System Design Interview volume 2: An insider\u2019s guide Alex Xu Published in 2022 424 pages <ul><li>System Design</li></ul> \u0323 Team Topologies: Team Topologies Matthew Skelton, Manuel Pais Published in 2019 240 pages <ul><li>Team Management</li></ul> \u0323 Terraform Up &amp; Running: Terraform Up &amp; Running Yevgenly Brikman Published in 2022 457 pages <ul><li>Infrastructure as Code (IaC)</li></ul> \u0323 The Site Reliability Workbook: Practical Ways to Implement SRE Betsy Beyer, Niall Myrphy, David K. Rensin, Kent Kawahara, Stephen Thorne Published in 2018 512 pages <ul><li>Site Reliability Engineering (SRE)</li></ul> <p>\u2b06 back to top</p>"}]}