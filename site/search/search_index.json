{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Choose your own IT readventure!","text":"<p>If you are a stubborn learner, eat books for breakfast, and want to discover new concepts or hunt new skills related to the IT world, I can assure you that you are in the right nook of the Internet. Prepare yourself to be amazed by a choose-your-own-adventure journey in the IT world. Hopefully, it will take you to interesting places thanks to the power and the fun of reading.</p> <p>Finally, make sure you don\u2019t forget about putting your newly acquired skills to the test, remember practice makes the master!</p> <p>Starting your adventure is as easy as picking the set of skills that you want to learn or improve, check out the learning paths and choose your starting point. There are paths focused on a particular technology or skill, and more generic ones, but both are useful and can be combined depending of your goal.</p> <p> A minimum previous knowledge is required to start some of these adventures. Various of them have been assembled to enlarge or acquire expertise in topics considered, until certain point, advanced. If you are new to the IT world or if you want to follow a learning path of high difficulty my recommendation is that, before adventuring, you read first about the basics and foundational concepts of that particular topic.</p>"},{"location":"#start-your-adventure-choose-your-learning-path-wisely","title":"Start your adventure, choose your learning path wisely","text":"<ul> <li>9 learning paths </li> <li>4 Golang books : A modern general purpose programming language born to make easier developing things like APIs, command line applications, cloud native applications, and concurrency patterns.</li> <li>1 Infrastructure as Code (IaC) books : Automate the cloud infrastructure deployment with code, make it reusable, deliver faster, more secure and have a backup of all the work you did, as code.</li> <li>8 Kubernetes books : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</li> <li>4 Microservices books : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> <li>1 Observability books : The art of being able to know what is happening in running systems through three pillars: logs, metrics and tracing. Discover what properties your systems need to acquire, what you need to integrate into your services and how instrumentalize to diagnose them when failure comes.</li> <li>7 Software Architecture books : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</li> <li>3 Site Reliability Engineering (SRE) books : SRE is about making productive system to stay up, to make update easier, to identify and resolve problems and, of course, automating things to make the team life easier.</li> <li>11 System Design books : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</li> <li> <p>2 Team Management books : Building team is no easy feat, doing it to be efficient to deliver quality products and services blazinlig fast is really hard. Roll up your sleeves and discover what makes a good team.</p> </li> <li> <p>34 books  , discover them all in the  book index.</p> </li> <li>44 authors  , discover them all in the  author index.</li> </ul>"},{"location":"#badges","title":"Badges","text":"<p>Learning path badges:</p> Badge Level Coming soon! In construction Just released! Have fund and enjoy! <p>All books have some badges associated to describe some aspect of them:</p> <ul> <li>You will read each book with the same amount of energy needed to fight these opponents, from lower to higher difficulty (these are totally subjective):</li> </ul> Badge Level Petty ant Naive chick Brave dog Fierce tiger Mighty dragon <ul> <li>Reading progress:</li> </ul> Badge Meaning Read To be read soon Not read and I don\u2019t know when I will <ul> <li>My book rating and recommendation level from lower to higher:</li> </ul> Badge Level Nice Good Very Good Excellent <p>Note: there are just four levels because all books mentioned are good reads, bad books don\u2019t belong here .</p> <ul> <li>Other badges:</li> </ul> Badge Meaning The book it\u2019s somewhat \u2018old\u2019 and I think it would be great to have a new edition to refresh the content Recommended read no matter the learning path"},{"location":"#about-me","title":"About me","text":"<p>I am a professional Cloud and Platform Engineer, DevOps practitioner, and Architect in construction. Also I develop things in my free time just for the fun of learning how not to do things. My main interests are the cloud, microservice architectures, EDA, serverless, system design, Kubernetes, and Golang.</p> <p>This repo is conceived as a journal of my personal journey and a learning path to guide others who, like me, find in reading the best way to acquire deep knowledge in certain topics. I will put together a list that categorizes all the books I\u2019ve read as well as those that I intend to read, or those that I consider of some importance in the IT field. The list is subjective, it will reflect my interests or the way I\u2019ve decided to explore topics (most likely in a chaotic way).</p> <p>If you think some books may fit better in other categories, or the category names are not accurate enough or have suggestions about possible improvements just let me know and I will gladly consider your comments. </p> <p>Of course, there will be books broadly considered a must-read that I have not listed, that\u2019s either because they don\u2019t fit in my career or simply because I don\u2019t know of their existence, in any case let me know!</p> <p>:bowtie: Thanks for stopping by, enjoy!</p>"},{"location":"#worthy-metions","title":"Worthy metions","text":"<ul> <li>Icons:</li> <li>Skill icons</li> <li>Tech icons</li> <li>Emoji icons</li> </ul> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/golang/","title":"Golang Learning Path (4 )","text":"<p>This path starts with some books to grasp the basics of the language but building applications to make you apply knowledge to near real case scenarios. After that you will have to choose the following steps depending on your needs or interests.</p> Reading Order Cover Info Description 1 Learning Go Jon Bodner Published in 2021 375 pages Golang from the ground up, learn the basics and all the language tools at your disposal to create applications in a modern programming language. 2 Let\u2019s Go: Let\u2019s Go Alex Edwards Published in 2019 305 pages Once you are familiarized with the foundations of the language, this book will help you to wire things up and learn how to use the tools Go offers to build a real application. You will follow the author while he builds a snippets mangament webapp, along the way you will use the Go to create a web with html templates, to process html requests, to store content in a database, manage user sessions, some security practices, and more. I found this one of the best books about Golang out there, don\u2019t let it pass and grab it!. 3 Let\u2019s Go Further!: Let\u2019s Go Further! Alex Edwards Published in 2021 582 pages Following Let\u2019s Go comes this book, where the author teachs you how to build an API and some common techniques to manage thinks like encoding/decoding JSON messages, rate limiting, CORS, pagination techniques, user data management, etc. Definitely a wothy read if you want to increase your knowledge in Go and how modern applications are built. 4 Cloud Native Go: Cloud Native Go Matthew A. Titmus Published in 2021 433 pages In this book you will discover what properties an application should have to be considered cloud native by reviewing and extending in detail the classic 12 factors. It will show you some useful patterns used to achieve things like: scalability, resilience, observability, and more. Along the way the author drops some insightful best practice pills about essential things like logging, caching, configuration management, etc. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</p> </li> <li> <p>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</p> </li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #goroutines #concurrency #channels #context #waitgroup #command-line </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/iac/","title":"Infrastructure as Code (IaC) Learning Path (1 )","text":"<p>TODO</p> Reading Order Cover Info Description 1 Terraform Up &amp; Running: Terraform Up &amp; Running Yevgenly Brikman Published in 2022 457 pages TODO <p>The following paths are opened to you now, choose wisely:</p> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #cloud-engineering #automation #state-management #fault-recovery #terraform #pulumi #crossplane #ansible </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/kubernetes/","title":"Kubernetes Learning Path (8 )","text":"<p>After mastering building and running containers at small scale, orchestration is the next step in the road. Kubernetes is the most popular orchestrator, backed by the CNCF, a variety os small and big companies, and open source projects. Thanks its capabilities and the ecosystem of open source projects built around it, Kubernetes, is a very good option to run microservice platforms at scale.</p> Reading Order Cover Info Description 1 Kubernetes: Up &amp; Running Brendan Burns, Joe Beda, Kelsey Hightower Published in 2022 326 pages Start your Kubernetes journey from the very basics. Learn the building blocks to get a solid knowledge base that will allow you advance in the fascinating world of container orchestration and microservice platforms. Recommended to every developer, software architect, infrastructure engineer or platform engineer due to the Kubernetes relevance nowadays. 2 Kubernetes Patterns: Kubernetes Patterns Bilgin Ibryam, Roland Huss Published in 2023 300 pages After a few years of using Kubernetes teams started to detect recognizable patterns that are commonly replicated. From the famous sidecar pattern and init containers to the necessary configuration patterns and beyond. This book will teach you how to solve common challenges in cloud native environments. 2 Kubernetes Best Practices: Kubernetes Best Practices Brendan Burns, Eddie Villalba, Dave Strebel, Lachlan Evenson Published in 2019 268 pages Usually, after being familiar with the basics of any technology, learning the best practices is a nice step, it will help you to avoid common mistakes and open new ways of thinking and doing things. This book will do exaclty that, from basic to more advanced topics. 3 Production Kubernetes: Production Kubernetes Josh Rosso, Rich Lander, Alex Brand, John Harris Published in 2021 506 pages Production Kubernetes will guide you from the view of an amateur to the vision of all you need to know and implement in order to build a professional and productive microservice platform. It also demonstrates the Kubernetes API extensibility through drivers for networking, storage and more. Other interesting topis are admission controllers, operators, service meshes and security. Definitely this is a book I really enjoyed, I recommend to read it at the same time with Design Patterns for Cloud Native Applications, it will broaden your vision as a developer as well as your perspective as platform engineer. 4 Certified Kubernetes Application Developer (CKAD) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2021 188 pages If you are interested in getting certified as Kubernetes application developer this book offers you a guide to do just that. 4 Certified Kubernetes Administrator (CKA) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2022 201 pages If you are interested in getting certified as Kubernetes administrator this book offers you a guide to do just that. 5 Knative in Action Jacques Chester Published in 2021 272 pages Knative is, along OpenFaaS, one of the most popular ways to build a serverless platform over Kubernetes. The author starts from zero explaining the motivation to adopt a serverless paradigm, then presents Knative in a technical demonstration of all its basic and some of the more advanced features like traffic management and application delivery. There are not many books on the topic yet as Knative is still a relatively young project. 5 Kubernetes Operators: Automating the Container Orchestration Platform Jason Dobies, Joshua Wood Published in 2020 154 pages Operators are another way of leveraging Kubernetes itself, they offer you the possibility to customize and automate your workloads management. Its a very popular pattern, in this book you will find what you need to get started to develop your own operator and all the tooling around the process. This book is a little bit \u2018old\u2019, many things have changed in this topic since 2020, it needs a second edition to adapt its contents to more updated practices. <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</p> </li> <li> <p>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update easier, to identify and resolve problems and, of course, automating things to make the team life easier.</p> </li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #container-runtime #ingress #controller #crd #operator #csi-driver #admission-controller #service-mesh #platform-engineering </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/microservices/","title":"Microservices Learning Path (4 )","text":"<p>Distributed systems are not new but the way they are built nowadays is. Monolithic architectures need to evolve to leverage the cloud and the many advantages that microservices offer (scalability, fast releases, high-availability, resilience, and more). As usually happen in life, nothing is just benefits, and microservices architectures are not different, they bring many challenges with them like a more complicated management or debugging, economic costs and the necessary knowledge to build and run them. However, if this kind of architecture fit your needs or if you are interested in finding out what all the fuss about microservices is about don\u2019t hesitate and dive in!.</p> Reading Order Cover Info Description 1 Building Microservices: Designing Fine-Grained Systems Sam Newman Published in 2022 616 pages One of the most important books in the field. Far from advocating for the monolithic architectures exile, the book offers useful insights to help you identify use cases for monoliths, or when to turn to microservices. It will teach you what microservices really are, their evolutionary origin, principles, characteristics and all the new challenges they bring to the table. Finally, the author explains how organizations should evolve to adapt their internal structure and vision in order to efficiently deliver value using microservices architectures. 2 Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith Sam Newman Published in 2019 270 pages TODO 2 Practical Process Automation: Orchestration and Integration in Microservices and Cloud Native Architectures Bernd Ruecker Published in 2021 520 pages TODO 3 Microservices Patterns: Microservices Patterns Chris Richardson Published in 2018 520 pages TODO <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</li> <li>Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>Golang : A modern general purpose programming language born to make easier developing things like APIs, command line applications, cloud native applications, and concurrency patterns.</p> </li> <li> <p>Observability : The art of being able to know what is happening in running systems through three pillars: logs, metrics and tracing. Discover what properties your systems need to acquire, what you need to integrate into your services and how instrumentalize to diagnose them when failure comes.</p> </li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #distributed-systems #architecture #scalability #resilience #observability #kubernetes #lambda #faas </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/observability/","title":"Observability Learning Path (1 )","text":"<p>Observability is the ability to measure a system\u2019s current state based on the data it generates. Learn all you need to make your services observable, to use specific tools and techniques to understand what\u2019s happening inside them and to know the state the system is in. </p> Reading Order Cover Info Description 1 Observability Engineering: Achieving Production Excellence Engineering Charity Majors, Liz Fong-Jones, George Miranda Published in 2022 318 pages TODO <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update easier, to identify and resolve problems and, of course, automating things to make the team life easier.</li> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update easier, to identify and resolve problems and, of course, automating things to make the team life easier.</li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #open-telemetry #troubleshooting #debugging #structured-logs #tracing #metrics-aggregation #logs-aggregation #data-retention #alarm #events </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/software-architecture/","title":"Software Architecture Learning Path (7 )","text":"<p>TODO</p> Reading Order Cover Info Description 1 Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages TODO 1 Fundamentals of Software Architecture: An Engineering Approach Mark Richards, Neal Ford Published in 2020 419 pages TODO 1 Software Architecture: The Hard Parts Neal Ford, Mark Richards, Pramod Sadalage and Zhamak Dehghani Published in 2021 459 pages TODO 1 Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages TODO 1 Learning Domain-Driven Design: Aligning Software Architecture and Business Strategy Vladik Khononov Published in 2021 340 pages TODO 1 Designing Data-Intensive Applications: Designing Data-Intensive Applications Martin Kleppmann Published in 2017 616 pages TODO 1 Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design Robert C. Martin Published in 2017 432 pages TODO <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>System Design : Acquire the skill needed to design and build systems, no matter if simple or complex. Learn how to identify the elements needed to create systems, to resolve scalability problems, detect possible points of failure, when to use an API, where to place a cache, when to use a NoSql database, and more.</p> </li> <li> <p>Golang : A modern general purpose programming language born to make easier developing things like APIs, command line applications, cloud native applications, and concurrency patterns.</p> </li> <li> <p>Observability : The art of being able to know what is happening in running systems through three pillars: logs, metrics and tracing. Discover what properties your systems need to acquire, what you need to integrate into your services and how instrumentalize to diagnose them when failure comes.</p> </li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #extensibility #scalability #clean-code #domain-driven-design #heaxagonal-architecture </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/sre/","title":"Site Reliability Engineering (SRE) Learning Path (3 )","text":"<p>TODO</p> Reading Order Cover Info Description 1 Site Reliability Engineering: Site Reliability Engineering Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Myrphy Published in 2017  * pages*  TODO 1 The Site Reliability Workbook: The Site Reliability Workbook Betsy Beyer, Niall Myrphy, David K. Rensin, Kent Kawahara, Stephen Thorne Published in 2018  * pages*  TODO 1 Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems Heather Adkins, Betsy Beyer, Paul Blankship, Piotr Lewandowski, Ana OPera, Adam Stubblefield Published in 2020 555 pages TODO <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Observability : The art of being able to know what is happening in running systems through three pillars: logs, metrics and tracing. Discover what properties your systems need to acquire, what you need to integrate into your services and how instrumentalize to diagnose them when failure comes.</li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #risk-management #sla #sli #slo #error-budget #toil #post-mortems #cascading-failures </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/system-design/","title":"System Design Learning Path (11 )","text":"<p>You want to create systems that resolve complicated technical problems, to find optimal solutions, to learn how evolve your systems to the next level, to rack your brains designing wonderful architectures that withstand the overwhelming onslaught of hyped user hordes. Well, as AC/CD sing: It\u2019s a long way to the top if you wanna Rock\u2019 n\u2019 Roll. But do not yield, tough efforts often bring solid results, keep calm and read hard!</p> Reading Order Cover Info Description 1 Building Microservices: Designing Fine-Grained Systems Sam Newman Published in 2022 616 pages One of the most important books in the field. Far from advocating for the monolithic architectures exile, the book offers useful insights to help you identify use cases for monoliths, or when to turn to microservices. It will teach you what microservices really are, their evolutionary origin, principles, characteristics and all the new challenges they bring to the table. Finally, the author explains how organizations should evolve to adapt their internal structure and vision in order to efficiently deliver value using microservices architectures. 1 System Design Interview: An insider\u2019s guide Alex Xu Published in 2020 309 pages TODO 1 System Design Interview volume 2: An insider\u2019s guide Alex Xu Published in 2022 424 pages TODO 1 Designing Distributed Systems: Designing Distributed Systems Brendan Burns Published in 2018 162 pages TODO 1 Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages TODO 1 Flow Architectures: The Future of Streaming and Event-Driven Integration James Urquhart Published in 2021 252 pages TODO 1 Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages TODO 1 Designing Data-Intensive Applications: Designing Data-Intensive Applications Martin Kleppmann Published in 2017 616 pages TODO 2 Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith Sam Newman Published in 2019 270 pages TODO 2 Practical Process Automation: Orchestration and Integration in Microservices and Cloud Native Architectures Bernd Ruecker Published in 2021 520 pages TODO 3 Microservices Patterns: Microservices Patterns Chris Richardson Published in 2018 520 pages TODO <p>The following paths are opened to you now, choose wisely:</p> <ul> <li>Microservices : Study the pinnacle of distributed systems architectures, learn its tenets, and foremost, when and how to implement it.</li> </ul> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li> <p>Software Architecture : Building software is not only about writing code, to design great platforms you should learn to think about extensibility, efficiency, easy integration, resilience, flexibility, and much more.</p> </li> <li> <p>Kubernetes : Run containers at scale and unlock the power of building microservice platforms thanks to the Kubernetes orchestrator.</p> </li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #scalability #manageability #resilience #observability #reliability #mantainability #extensibility #high-availability #databases #algorithms </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"learning-paths/team-management/","title":"Team Management Learning Path (2 )","text":"<p>With new development paradigms come new ways to compose and organize teams, the need of adapting relationships and inter-team communication is necessary to pursue efficiency and achieve organization goals faster. That\u2019s what you will learn in this path, how to make teams and organizations more effective and efficient.</p> Reading Order Cover Info Description 1 Team Topologies: Team Topologies Matthew Skelton, Manuel Pais Published in 2019 240 pages Team Topologies offers a modern vision about how teams should be created and managed to optimize a company\u2019s internal functioning as well as the output it produces. It uses ideas from other management books, like Accelerate (Nicole Forsgren), and takes them a step further to create a framework that will teach you form, combine and coordinate teams. The authors present four different kinds of teams, the role they play for a business domain and how they should communicate between them to achieve the organization goals as efficiently as possible. Also, you will discover things to avoid when managing teams, and what affect negatively to their performance. 2 Accelerate: Building and Scaling High Performing Technology Organizations Nicole Forsgren Published in 2018 288 pages This books is born from a task of data collected by the authors during their career participating in software projets. The experience was converted to book format with added conclusions and it has been a reference since the publication. Common problems of communication and team misfunction are exposed as well as some remedies to avoid them when building teams or organizations. <p>The following paths are opened to you now, choose wisely:</p> <p>Want to change the subject? Here are some suggestions about other paths you can explore:</p> <ul> <li>Site Reliability Engineering (SRE) : SRE is about making productive system to stay up, to make update easier, to identify and resolve problems and, of course, automating things to make the team life easier.</li> </ul> Bonus quest: learn about these related concepts! :round_pushpin: :beginner: :gem:  <p> #efficiency #software-delivery #team-design #organization-structure </p> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"references/authors/","title":"Author Index (44 )","text":"Name Books Adam Stubblefield <ul><li>Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems</li></ul> Alex Brand <ul><li>Production Kubernetes: Production Kubernetes</li></ul> Alex Xu <ul><li>System Design Interview: An insider\u2019s guide</li> <li>System Design Interview volume 2: An insider\u2019s guide</li></ul> Ana OPera <ul><li>Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems</li></ul> Benjamin Muschko <ul><li>Certified Kubernetes Administrator (CKA) Study Guide: In Depth Guidance and Practice</li> <li>Certified Kubernetes Application Developer (CKAD) Study Guide: In Depth Guidance and Practice</li></ul> Bernd Ruecker <ul><li>Practical Process Automation: Orchestration and Integration in Microservices and Cloud Native Architectures</li></ul> Betsy Beyer <ul><li>Site Reliability Engineering: Site Reliability Engineering</li> <li>The Site Reliability Workbook: The Site Reliability Workbook</li> <li>Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems</li></ul> Bilgin Ibryam <ul><li>Kubernetes Patterns: Kubernetes Patterns</li></ul> Brendan Burns <ul><li>Designing Distributed Systems: Designing Distributed Systems</li> <li>Kubernetes: Up &amp; Running</li> <li>Kubernetes Best Practices: Kubernetes Best Practices</li></ul> Charity Majors <ul><li>Observability Engineering: Achieving Production Excellence Engineering</li></ul> Chris Jones <ul><li>Site Reliability Engineering: Site Reliability Engineering</li></ul> Chris Richardson <ul><li>Microservices Patterns: Microservices Patterns</li></ul> Dave Strebel <ul><li>Kubernetes Best Practices: Kubernetes Best Practices</li></ul> David K. Rensin <ul><li>The Site Reliability Workbook: The Site Reliability Workbook</li></ul> Eddie Villalba <ul><li>Kubernetes Best Practices: Kubernetes Best Practices</li></ul> George Miranda <ul><li>Observability Engineering: Achieving Production Excellence Engineering</li></ul> Heather Adkins <ul><li>Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems</li></ul> Ian Gorton <ul><li>Foundations of Scalable Systems: Designing Distributed Architectures</li></ul> Jason Dobies <ul><li>Kubernetes Operators: Automating the Container Orchestration Platform</li></ul> Jennifer Petoff <ul><li>Site Reliability Engineering: Site Reliability Engineering</li></ul> Joe Beda <ul><li>Kubernetes: Up &amp; Running</li></ul> John Harris <ul><li>Production Kubernetes: Production Kubernetes</li></ul> Josh Rosso <ul><li>Production Kubernetes: Production Kubernetes</li></ul> Joshua Wood <ul><li>Kubernetes Operators: Automating the Container Orchestration Platform</li></ul> Kasun Indrasiri <ul><li>Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams</li></ul> Kelsey Hightower <ul><li>Kubernetes: Up &amp; Running</li></ul> Kent Kawahara <ul><li>The Site Reliability Workbook: The Site Reliability Workbook</li></ul> Lachlan Evenson <ul><li>Kubernetes Best Practices: Kubernetes Best Practices</li></ul> Liz Fong-Jones <ul><li>Observability Engineering: Achieving Production Excellence Engineering</li></ul> Manuel Pais <ul><li>Team Topologies: Team Topologies</li></ul> Mark Richards <ul><li>Fundamentals of Software Architecture: An Engineering Approach</li> <li>Software Architecture: The Hard Parts</li></ul> Martin Kleppmann <ul><li>Designing Data-Intensive Applications: Designing Data-Intensive Applications</li></ul> Matthew Skelton <ul><li>Team Topologies: Team Topologies</li></ul> Neal Ford <ul><li>Fundamentals of Software Architecture: An Engineering Approach</li> <li>Software Architecture: The Hard Parts</li></ul> Niall Myrphy <ul><li>Site Reliability Engineering: Site Reliability Engineering</li> <li>The Site Reliability Workbook: The Site Reliability Workbook</li></ul> Nicole Forsgren <ul><li>Accelerate: Building and Scaling High Performing Technology Organizations</li></ul> Paul Blankship <ul><li>Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems</li></ul> Piotr Lewandowski <ul><li>Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems</li></ul> Pramod Sadalage and Zhamak Dehghani <ul><li>Software Architecture: The Hard Parts</li></ul> Rich Lander <ul><li>Production Kubernetes: Production Kubernetes</li></ul> Roland Huss <ul><li>Kubernetes Patterns: Kubernetes Patterns</li></ul> Sam Newman <ul><li>Building Microservices: Designing Fine-Grained Systems</li> <li>Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith</li></ul> Sriskandarajah Suhothayan <ul><li>Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams</li></ul> Stephen Thorne <ul><li>The Site Reliability Workbook: The Site Reliability Workbook</li></ul> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"},{"location":"references/books/","title":"Book Index (34 )","text":"Cover Info Learning Paths Accelerate: Building and Scaling High Performing Technology Organizations Nicole Forsgren Published in 2018 288 pages <ul><li>Team Management</li></ul> Building Microservices: Designing Fine-Grained Systems Sam Newman Published in 2022 616 pages <ul><li>Microservices</li><li>System Design</li></ul> Building Secure &amp; Reliable Systems: Best Practices for Designing, Implementing and Maintaining Systems Heather Adkins, Betsy Beyer, Paul Blankship, Piotr Lewandowski, Ana OPera, Adam Stubblefield Published in 2020 555 pages <ul><li>Site Reliability Engineering (SRE)</li></ul> Certified Kubernetes Administrator (CKA) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2022 201 pages <ul><li>Kubernetes</li></ul> Certified Kubernetes Application Developer (CKAD) Study Guide: In Depth Guidance and Practice Benjamin Muschko Published in 2021 188 pages <ul><li>Kubernetes</li></ul> Clean Architecture: A Craftsman\u2019s Guide to Software Structure and Design Robert C. Martin Published in 2017 432 pages <ul><li>Software Architecture</li></ul> Cloud Native Go: Cloud Native Go Matthew A. Titmus Published in 2021 433 pages <ul><li>Golang</li><li>Golang</li></ul> Design Patterns for Cloud Native Applications: Patterns in Practice Using APIs, Data, Events and Streams Kasun Indrasiri, Sriskandarajah Suhothayan Published in 2021 311 pages <ul><li>Software Architecture</li><li>System Design</li></ul> Designing Data-Intensive Applications: Designing Data-Intensive Applications Martin Kleppmann Published in 2017 616 pages <ul><li>Software Architecture</li><li>System Design</li></ul> Designing Distributed Systems: Designing Distributed Systems Brendan Burns Published in 2018 162 pages <ul><li>System Design</li></ul> Flow Architectures: The Future of Streaming and Event-Driven Integration James Urquhart Published in 2021 252 pages <ul><li>System Design</li><li>System Design</li></ul> Foundations of Scalable Systems: Designing Distributed Architectures Ian Gorton Published in 2022 320 pages <ul><li>System Design</li><li>Software Architecture</li></ul> Fundamentals of Software Architecture: An Engineering Approach Mark Richards, Neal Ford Published in 2020 419 pages <ul><li>Software Architecture</li></ul> Knative in Action Jacques Chester Published in 2021 272 pages <ul><li>Kubernetes</li><li>Kubernetes</li></ul> Kubernetes: Up &amp; Running Brendan Burns, Joe Beda, Kelsey Hightower Published in 2022 326 pages <ul><li>Kubernetes</li></ul> Kubernetes Best Practices: Kubernetes Best Practices Brendan Burns, Eddie Villalba, Dave Strebel, Lachlan Evenson Published in 2019 268 pages <ul><li>Kubernetes</li></ul> Kubernetes Operators: Automating the Container Orchestration Platform Jason Dobies, Joshua Wood Published in 2020 154 pages <ul><li>Kubernetes</li></ul> Kubernetes Patterns: Kubernetes Patterns Bilgin Ibryam, Roland Huss Published in 2023 300 pages <ul><li>Kubernetes</li></ul> Learning Domain-Driven Design: Aligning Software Architecture and Business Strategy Vladik Khononov Published in 2021 340 pages <ul><li>Software Architecture</li><li>Software Architecture</li></ul> Learning Go Jon Bodner Published in 2021 375 pages <ul><li>Golang</li><li>Golang</li></ul> Let\u2019s Go: Let\u2019s Go Alex Edwards Published in 2019 305 pages <ul><li>Golang</li><li>Golang</li></ul> Let\u2019s Go Further!: Let\u2019s Go Further! Alex Edwards Published in 2021 582 pages <ul><li>Golang</li><li>Golang</li></ul> Microservices Patterns: Microservices Patterns Chris Richardson Published in 2018 520 pages <ul><li>Microservices</li><li>System Design</li></ul> Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith Sam Newman Published in 2019 270 pages <ul><li>Microservices</li><li>System Design</li></ul> Observability Engineering: Achieving Production Excellence Engineering Charity Majors, Liz Fong-Jones, George Miranda Published in 2022 318 pages <ul><li>Observability</li></ul> Practical Process Automation: Orchestration and Integration in Microservices and Cloud Native Architectures Bernd Ruecker Published in 2021 520 pages <ul><li>Microservices</li><li>System Design</li></ul> Production Kubernetes: Production Kubernetes Josh Rosso, Rich Lander, Alex Brand, John Harris Published in 2021 506 pages <ul><li>Kubernetes</li></ul> Site Reliability Engineering: Site Reliability Engineering Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Myrphy Published in 2017  * pages*  <ul><li>Site Reliability Engineering (SRE)</li></ul> Software Architecture: The Hard Parts Neal Ford, Mark Richards, Pramod Sadalage and Zhamak Dehghani Published in 2021 459 pages <ul><li>Software Architecture</li></ul> System Design Interview: An insider\u2019s guide Alex Xu Published in 2020 309 pages <ul><li>System Design</li></ul> System Design Interview volume 2: An insider\u2019s guide Alex Xu Published in 2022 424 pages <ul><li>System Design</li></ul> Team Topologies: Team Topologies Matthew Skelton, Manuel Pais Published in 2019 240 pages <ul><li>Team Management</li></ul> Terraform Up &amp; Running: Terraform Up &amp; Running Yevgenly Brikman Published in 2022 457 pages <ul><li>Infrastructure as Code (IaC)</li></ul> The Site Reliability Workbook: The Site Reliability Workbook Betsy Beyer, Niall Myrphy, David K. Rensin, Kent Kawahara, Stephen Thorne Published in 2018  * pages*  <ul><li>Site Reliability Engineering (SRE)</li></ul> <p>Last modified 2023-03-12</p> <p>\u2b06 back to top</p>"}]}